apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply from: "$rootProject.projectDir/buildsystem/config.gradle"

def configuration = ext.configuration;

android {
  compileSdkVersion configuration.compileSdkVersion
  buildToolsVersion configuration.buildToolsVersion

  defaultConfig {
    minSdkVersion configuration.minimumSdkVersion
    targetSdkVersion configuration.targetSdkVersion

    applicationId configuration.applicationId
    versionCode buildVersionCode()
    versionName buildVersionName()
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/rxjava.properties'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

afterEvaluate { project ->
  if (project.tasks.findByName("generateReleaseBuildConfig")) {
    project.tasks.generateReleaseBuildConfig << {
      incrementVersionBuild()
    }
  }
}

dependencies {
  def library = rootProject.ext.presentationDependencies;
  def libraryTest = rootProject.ext.presentationTestDependencies;

  compile project(':domain')
  compile project(':data')
  compile project(':infrastructure')

  compile "${library.timber}"
  apt "${library.daggerCompiler}"
  compile "${library.dagger}"
  compile "${library.rxJava}"
  compile "${library.rxAndroid}"
  provided "${library.javaxAnnotation}"
  compile "${library.lightweightStreamApi}"
  compile "${library.design}"
  compile "${library.appCompat}"
  compile "${library.recyclerView}"
  compile "${library.cardView}"
  apt "${library.butterKnifeCompiler}"
  compile "${library.butterKnife}"
  compile "${library.picasso}"
  compile "${library.materialDesignColors}"
  compile "${library.androidSpinKit}"

  testCompile "${libraryTest.jUnit}"
}
